{"version":3,"sources":["app.ts"],"names":[],"mappings":"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","file":"app.24ccc578.js","sourceRoot":"../src","sourcesContent":["interface TinySquareConfig {\n  defaultColor : string,\n  defaultSize : string,\n  color : Maybe<string>,\n  size : Maybe<number>,\n  specialColors : Record<string, Array<string>>\n}\n\ninterface Window { tinySquare: TinySquareConfig }\n\nwindow.tinySquare = {\n  defaultColor: \"FF6F61\",\n  defaultSize : \"200\",\n  color: undefined,\n  size: undefined,\n  specialColors: {\n    \"pride\":\n      [ \"#E70000\"\n      , \"#FF8C00\"\n      , \"#FFEF00\"\n      , \"#00811F\"\n      , \"#0044FF\"\n      , \"#760089\"\n      ]\n  }\n};\n\ntype Maybe<T> = T | undefined;\nfunction maybeMap<T, U>(mv: Maybe<T>, f: (v:T) => U) : Maybe<U> {\n  if(mv !== undefined) {\n    return f(mv);\n  }else{\n    return undefined;\n  }\n}\nfunction maybeBind<T, U>(mv: Maybe<T>, f: (v:T) => Maybe<U>) : Maybe<U> {\n  if(mv !== undefined) {\n    return f(mv);\n  }else{\n    return undefined;\n  }\n}\nfunction withDefault<T>(mv : Maybe<T>, defaultValue : T) : T {\n  if(mv === undefined) {\n    return defaultValue;\n  }else{\n    return mv;\n  }\n}\nfunction maybeFromNullable<T>(v : T | null) : Maybe<T> {\n  if(v === null) {\n    return undefined;\n  }else{\n    return v;\n  }\n}\n\nfunction withElementById<U>(id : string, func : ( element : HTMLElement ) => U) : U | void {\n  return maybeMap(maybeFromNullable(document.getElementById(id)), func);\n}\n\n\nfunction getColor() : string {\n  if(window.tinySquare.color){\n    const color= window.tinySquare.color;\n    if(color == \"pride\") {\n      return color;\n    }else{\n      return color.startsWith(\"#\") ? color : \"#\" + color;\n    }\n  }else{\n    return window.tinySquare.defaultColor;\n  }\n}\nfunction getSize() : number {\n  if(window.tinySquare.size) {\n    return window.tinySquare.size;\n  }else{\n    return 0;\n  }\n}\nfunction getColorFromParam() : string {\n  const urlParams = new URLSearchParams(window.location.search);\n  return withDefault(maybeFromNullable(urlParams.get('color')), window.tinySquare.defaultColor);\n}\nfunction setColorFromParam() : string {\n  window.tinySquare.color = getColorFromParam();\n  return getColor();\n}\nfunction getColorFromPicker() : string {\n  return (<HTMLInputElement>document.getElementById('color-picker')).value;\n}\nfunction setColorFromPicker() : string {\n  window.tinySquare.color = getColorFromPicker();\n  return getColor();\n}\nfunction getSizeFromParam() : number {\n  const urlParams = new URLSearchParams(window.location.search);\n  const size = withDefault(maybeFromNullable(urlParams.get('size')), window.tinySquare.defaultSize);\n  return Math.ceil(parseInt(size));\n}\nfunction setSizeFromParam()  : number {\n  window.tinySquare.size = getSizeFromParam();\n  return getSize();\n}\n\nfunction onLoad() {\n  const color : string = setColorFromParam();\n  const size = setSizeFromParam();\n  if(color in window.tinySquare.specialColors) {\n    drawSpecialColor(window.tinySquare.specialColors[color], size);\n  }else{\n    handleSizeAndColor(size, color);\n  }\n  displayColorAndSize(color, size);\n  initializeColorPicker(color);\n  displayDataUrl();\n  withElementById('download-image-button', (el) => { el.addEventListener(\"click\", downloadTinySquare); });\n  withElementById('dataurl-copy-button', (el) => { el.addEventListener(\"click\", copyDataURLToClipboard); });\n}\n\nfunction displayDataUrl() {\n  const canvas : HTMLCanvasElement = <HTMLCanvasElement> document.getElementById('canvas');\n  const dataUrl = canvas.toDataURL();\n  const dataUrlTag = <HTMLInputElement> document.getElementById('dataurl');\n  dataUrlTag.value = dataUrl;\n}\n\nfunction shouldAutoCopyDataUrl() {\n  const urlParams = new URLSearchParams(window.location.search);\n  return urlParams.has('autocopydataurl');\n}\nfunction copyDataURLToClipboard() {\n  if(navigator.clipboard) {\n    const canvas : HTMLCanvasElement = <HTMLCanvasElement> document.getElementById('canvas');\n    const dataURL : string = canvas.toDataURL();\n    navigator.clipboard.writeText(dataURL);\n  }\n}\n\nfunction colorPickerChange(e : Event) {\n  const color = setColorFromPicker();\n  const size = getSize();\n  handleSizeAndColor(size, color);\n  displayColorAndSize(color, size);\n}\nfunction initializeColorPicker(color : string) {\n  const colorPicker = <HTMLInputElement> document.getElementById('color-picker');\n  if(color === \"pride\") {\n    const parent = colorPicker.parentNode;\n    if(parent) {\n      parent.removeChild(colorPicker);\n    }\n  }else{\n    colorPicker.value = color;\n    colorPicker.addEventListener(\"input\", colorPickerChange);\n    withElementById('color-display', (el) => { el.addEventListener('click', function() { colorPicker.click(); }) });\n  }\n}\n\nfunction displayColorAndSize(color : string, size : number) {\n  withElementById('color-display', (el) => { el.innerText = color });\n  withElementById('size-display', (el) => { el.innerText = size.toString() });\n}\n\nfunction drawSpecialColor(colors: Array<string>, size: number) {\n  const canvas : HTMLCanvasElement = <HTMLCanvasElement> document.getElementById('canvas');\n  canvas.width = size;\n  canvas.height = size;\n  const ctx : CanvasRenderingContext2D | null = canvas.getContext('2d', { alpha: false });\n  if(ctx) {\n    const increment = 1 / colors.length;\n    const grd = ctx.createLinearGradient(0,0,0,size);\n    for(let i = 0; i < colors.length; i++) {\n      const colorStop = i * increment;\n      grd.addColorStop(colorStop, colors[i]);\n      grd.addColorStop(colorStop + increment - .001, colors[i]);\n    }\n    ctx.fillStyle = grd;\n    ctx.fillRect(0,0, size, size);\n  }\n}\n\nfunction handleSizeAndColor(size : number, color : string) {\n  const canvas : HTMLCanvasElement = <HTMLCanvasElement> document.getElementById('canvas');\n  canvas.width = size;\n  canvas.height = size;\n  if (canvas.getContext) {\n    const ctx : CanvasRenderingContext2D | null = canvas.getContext('2d', { alpha: false });\n    if(ctx) {\n      ctx.fillStyle = color;\n      ctx.fillRect(0, 0, size, size);\n      withElementById('dataurl-copy-button', (el) => { el.style.backgroundColor = color}) ;\n      withElementById('download-image-button', (el) => { el.style.backgroundColor = color});\n      if(shouldAutoCopyDataUrl()){\n        copyDataURLToClipboard();\n      }\n    }\n  }\n}\nfunction downloadTinySquare(e : Event) {\n  const canvas = <HTMLCanvasElement> document.getElementById('canvas');\n  const image =  canvas.toDataURL(\"image/jpg\");\n  const filename = 'tinysquare-'.concat(getColor(), '-', getSize().toString(), '.png');\n  const el = <HTMLAnchorElement> e.target;\n  el.download = filename;\n  el.href = image;\n}\ndocument.addEventListener(\"DOMContentLoaded\", onLoad);\n"]}